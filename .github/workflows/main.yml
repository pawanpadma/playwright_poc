name: Playwright Tests by File

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Playwright Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - testFile: playwright_automation/tests/example.spec.ts
            name: Test1
          - testFile: playwright_automation/tests/home.spec.ts
            name: Test2
          # Uncomment the following lines if you have more tests
          # - testFile: playwright_automation/tests/login.spec.ts
          #   name: Test3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install ./playwright_automation

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run test file and capture status
        run: |
          set +e
          mkdir -p playwright_automation/test-results  # Ensure the test-results folder exists
          echo "Running test file: ${{ matrix.testFile }}"
          npx playwright test ${{ matrix.testFile }} --reporter=json > playwright_automation/test-results/${{ matrix.name }}.json
          STATUS=$?
          echo "Playwright exited with code $STATUS"
    
          if [ "$STATUS" -eq 0 ]; then
            echo "passed" > status.txt
          else
            echo "failed" > status.txt
          fi
    
          exit $STATUS
        working-directory: playwright_automation
        continue-on-error: true

      - name: Debugging the results directory
        run: |
          echo "Checking contents of the test-results directory..."
          ls -la playwright_automation/test-results/

      - name: Rename and zip JSON report
        run: |
          REPORT_DIR="report-${{ matrix.name }}"
          mkdir -p "$REPORT_DIR"
          
          # Check if the JSON file exists
          if [ -f "playwright_automation/test-results/${{ matrix.name }}.json" ]; then
            mv playwright_automation/test-results/${{ matrix.name }}.json "$REPORT_DIR"
          else
            echo "Error: JSON report not found for ${{ matrix.name }}"
            exit 1
          fi

          mv playwright_automation/status.txt "$REPORT_DIR/status.txt"
          zip -r "$REPORT_DIR.zip" "$REPORT_DIR"

      - name: Upload zipped report
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.name }}
          path: report-${{ matrix.name }}.zip

  merge-reports:
    name: Merge All Reports
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Debug checkout content
        run: |
            echo "Current working directory: $PWD"
            echo "Files:"
            ls -la
      
      - name: Install dependencies
        run: npm install
        working-directory: playwright_automation
          
      - name: Install Playwright CLI (if needed)
        run: npm install --no-save playwright
        working-directory: playwright_automation

      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: all-reports
          merge-multiple: true

      - name: List downloaded reports
        run: find all-reports

      - name: Generate merged report index
        run: |
          mkdir merged-report
          echo "<html><body><h1>Test Report Index</h1><ul>" > merged-report/index.html

          for zip in all-reports/*.zip; do
            name=$(basename "$zip" .zip)
            mkdir -p "merged-report/$name"
            unzip -q "$zip" -d "merged-report/tmp"
            mv "merged-report/tmp/$name"/* "merged-report/$name"
            rm -rf "merged-report/tmp"

            status="❓"
            if [[ -f "merged-report/$name/status.txt" ]]; then
              case $(<"merged-report/$name/status.txt") in
                passed) status="✅ Passed" ;;
                failed) status="❌ Failed" ;;
              esac
            fi

            echo "<li><a href='$name/index.html'>$name</a> - $status</li>" >> merged-report/index.html
          done

          echo "</ul></body></html>" >> merged-report/index.html
      
      - name: Upload merged index report
        uses: actions/upload-artifact@v4
        with:
          name: merged-html-report
          path: merged-report
