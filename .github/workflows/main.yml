name: Playwright Tests by File

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Playwright Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - testFile: playwright_automation/tests/example.spec.ts
          name: Test1
        - testFile: playwright_automation/tests/home.spec.ts
          name: Test2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install ./playwright_automation

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run test file and capture status
        run: |
          set +e
          # Run Playwright tests with JSON reporter
          npx playwright test ${{ matrix.testFile }} --reporter=json > playwright_automation/test-results/${{ matrix.name }}.json
          STATUS=$?
          echo "Playwright exited with code $STATUS"
      
          if [ "$STATUS" -eq 0 ]; then
            echo "passed" > status.txt
          else
            echo "failed" > status.txt
          fi
      
          exit $STATUS
        working-directory: playwright_automation
        continue-on-error: true

      - name: Rename and zip JSON report
        run: |
          REPORT_DIR="report-${{ matrix.name }}"
          mkdir -p "$REPORT_DIR"
          mv playwright_automation/test-results/${{ matrix.name }}.json "$REPORT_DIR"
          mv playwright_automation/status.txt "$REPORT_DIR/status.txt"
          zip -r "$REPORT_DIR.zip" "$REPORT_DIR"

      - name: Upload zipped report
        uses: actions/upload-artifact@v4
        with:
            name: report-${{ matrix.name }}
            path: report-${{ matrix.name }}.zip

  merge-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
        working-directory: playwright_automation

      - name: Install Playwright CLI (if needed)
        run: npm install --no-save playwright
        working-directory: playwright_automation

      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: all-reports
          merge-multiple: true

      - name: List downloaded reports
        run: find all-reports

      - name: Merge JSON reports and generate HTML
        run: |
          mkdir merged-report
          npx playwright merge-reports --reporter=html ./all-reports/**/*.json
          mv playwright-report merged-report/

      - name: Upload merged HTML report
        uses: actions/upload-artifact@v4
        with:
          name: merged-html-report
          path: merged-report
