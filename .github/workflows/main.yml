name: Playwright Tests with Merged Reports

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Playwright Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - testFile: playwright_automation/tests/example.spec.ts
            name: Test1
          - testFile: playwright_automation/tests/home.spec.ts
            name: Test2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install ./playwright_automation

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run test file
        continue-on-error: true
        run: |
          set +e
          mkdir -p test-results
          xvfb-run npx playwright test ${{ matrix.testFile }} \
            --reporter=json,html \
            --output=test-results/${{ matrix.name }}
          STATUS=$?
          echo "$([ "$STATUS" -eq 0 ] && echo 'passed' || echo 'failed')" > test-results/${{ matrix.name }}/status.txt
          exit $STATUS
        working-directory: playwright_automation

      - name: Package reports
        run: |
          mkdir -p packaged-reports
          cp -r test-results/${{ matrix.name }} packaged-reports/report-${{ matrix.name }}
          zip -r report-${{ matrix.name }}.zip packaged-reports/report-${{ matrix.name }}
        working-directory: playwright_automation

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.name }}
          path: playwright_automation/report-${{ matrix.name }}.zip

  merge-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: playwright_automation

      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: 'report-*.zip'
        

      - name: Debug downloaded artifacts
        run: |
            echo "Artifacts directory contents:"
            ls -la artifacts/
            echo "Zip files found:"
            find artifacts -name '*.zip' -exec echo "Found: {}" \;    

      - name: Prepare reports for merging
        run: |
          # Create directories
          mkdir -p extracted-reports
          mkdir -p playwright_automation/merge-input
          
          # Unzip artifacts (now in artifacts/ directory)
          find artifacts -name '*.zip' -exec unzip -d extracted-reports {} \;
          
          # Prepare merge structure
          i=1
          for report in $(find extracted-reports -name 'report.json'); do
            dir="playwright_automation/merge-input/run-$i"
            mkdir -p "$dir"
            cp "$report" "$dir/test-results.json"
            i=$((i+1))
          done

          # Debug
          echo "Merge input structure:"
          tree playwright_automation/merge-input || true
          find playwright_automation/merge-input -name 'test-results.json' -exec echo "Found: {}" \;

      - name: Merge reports
        working-directory: playwright_automation
        run: |
          npx playwright merge-reports --reporter html merge-input
          mkdir -p ../merged-report
          mv playwright-report ../merged-report/

      - name: Upload merged HTML report
        uses: actions/upload-artifact@v4
        with:
          name: merged-html-report
          path: merged-report