name: Playwright Tests by File

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Playwright Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - testFile: playwright_automation/tests/example.spec.ts
          name: Test1
        - testFile: playwright_automation/tests/home.spec.ts
          name: Test2
        # - testFile: playwright_automation/tests/login.spec.ts
        #   name: Test3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install ./playwright_automation

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run test file and capture status
        continue-on-error: true
        run: |
            set +e
            xvfb-run npx playwright test ${{ matrix.testFile }}
            STATUS=$?
            echo "Playwright exited with code $STATUS"
            if [ "$STATUS" -eq 0 ]; then
              echo "passed" > status.txt
            else
              echo "failed" > status.txt
            fi
            exit $STATUS
        working-directory: playwright_automation

      - name: Rename and zip HTML + JSON report
        run: |
          REPORT_DIR="report-${{ matrix.name }}"
          mkdir -p "$REPORT_DIR"
          mv playwright_automation/playwright-report "$REPORT_DIR/"
          mv playwright_automation/status.txt "$REPORT_DIR/"
          mv playwright_automation/report.json "$REPORT_DIR/"
          zip -r "$REPORT_DIR.zip" "$REPORT_DIR"


      

      - name: Upload zipped report
        uses: actions/upload-artifact@v4
        with:
            name: report-${{ matrix.name }}
            path: report-${{ matrix.name }}.zip

  

  merge-reports:
      runs-on: ubuntu-latest
      needs: test
      steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Debug checkout content
        run: |
            echo "Current working directory: $PWD"
            echo "Files:"
            ls -la
      
      - name: Install dependencies
        run: npm install
        working-directory: playwright_automation
          
      - name: Install Playwright CLI (if needed)
        run: npm install --no-save playwright
        working-directory: playwright_automation

      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: all-reports
          merge-multiple: true  

      - name: Merge JSONs and generate final HTML report
        run: |
            mkdir merged-report
        
            # Unzip all .zip artifacts
            mkdir extracted-reports
            for zip in all-reports/*.zip; do
              unzip -q "$zip" -d extracted-reports
            done
        
            echo "Contents of extracted-reports:"
            find extracted-reports
        
            # Collect and rename all JSON reports from nested path
            mkdir json-results
            i=1
            find extracted-reports -path '*/playwright_automation/report.json' | while read f; do
              cp "$f" "json-results/report-$i.json"
              i=$((i + 1))
            done
        
            echo "Renamed JSONs:"
            ls -l json-results
        
            # Merge into single HTML report
            npx playwright merge-reports --reporter html json-results/
            mv playwright-report merged-report/
        
        
      
      - name: Upload merged HTML report
        uses: actions/upload-artifact@v4
        with:
            name: merged-html-report
            path: merged-report
      

