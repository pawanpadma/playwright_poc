name: Playwright Sharded Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shardIndex: [0, 1]  # Adjust based on desired shard count
    env:
      SHARD_INDEX: ${{ matrix.shardIndex }}
      TOTAL_SHARDS: 2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
        working-directory: playwright_automation

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: playwright_automation

      - name: Run sharded tests
        run: |
          npx playwright test --shard=${SHARD_INDEX}/${TOTAL_SHARDS} --reporter=json,html
        working-directory: playwright_automation
        continue-on-error: true

      - name: Archive test results
        run: |
          REPORT_DIR="report-shard-${SHARD_INDEX}"
          mkdir -p "$REPORT_DIR"
          mv test-results "$REPORT_DIR/test-results"
          zip -r "${REPORT_DIR}.zip" "$REPORT_DIR"
        working-directory: playwright_automation

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: report-shard-${{ matrix.shardIndex }}
          path: playwright_automation/report-shard-${{ matrix.shardIndex }}.zip

  merge:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
        working-directory: playwright_automation

      - name: Install Playwright CLI
        run: npm install --no-save playwright
        working-directory: playwright_automation

      - name: Download all shard reports
        uses: actions/download-artifact@v4
        with:
          path: all-reports
          merge-multiple: true

      - name: Unzip and collect all JSON reports
        run: |
          mkdir -p combined-results
          for zip in all-reports/*.zip; do
            unzip -q "$zip" -d tmp
            cp tmp/**/test-results/*.json combined-results/
            rm -rf tmp
          done

      - name: Merge reports and generate HTML
        run: |
          npx playwright merge-reports --reporter html combined-results
          mv playwright-report merged-report
        working-directory: playwright_automation

      - name: Upload final merged HTML report
        uses: actions
