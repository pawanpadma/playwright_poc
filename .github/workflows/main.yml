name: Playwright Tests with Merged Reports

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Playwright Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - testFile: playwright_automation/tests/example.spec.ts
            name: Test1
          - testFile: playwright_automation/tests/home.spec.ts
            name: Test2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install ./playwright_automation

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Create test results directory
        run: mkdir -p playwright_automation/test-results/${{ matrix.name }}
        working-directory: playwright_automation

      - name: Run test file
        continue-on-error: true
        run: |
          set +e
          xvfb-run npx playwright test ${{ matrix.testFile }} \
            --reporter=json,html \
            --output=test-results/${{ matrix.name }}
          STATUS=$?
          echo "Playwright exited with code $STATUS"
          echo "$([ "$STATUS" -eq 0 ] && echo 'passed' || echo 'failed')" > test-results/${{ matrix.name }}/status.txt
          exit $STATUS
        working-directory: playwright_automation

      - name: Verify test outputs
        run: |
          echo "Test outputs for ${{ matrix.name }}:"
          ls -la test-results/${{ matrix.name }}
          echo "Report.json content (first 5 lines):"
          head -n 5 test-results/${{ matrix.name }}/report.json || echo "No report.json found"
        working-directory: playwright_automation

      - name: Package and upload reports
        run: |
          REPORT_DIR="report-${{ matrix.name }}"
          mkdir -p "$REPORT_DIR"
          cp test-results/${{ matrix.name }}/report.json "$REPORT_DIR/" || echo "No JSON report found"
          cp -r test-results/${{ matrix.name }}/playwright-report "$REPORT_DIR/" || echo "No HTML report found"
          cp test-results/${{ matrix.name }}/status.txt "$REPORT_DIR/" || echo "No status file found"
          zip -r "$REPORT_DIR.zip" "$REPORT_DIR/"
        working-directory: playwright_automation

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.name }}
          path: playwright_automation/report-${{ matrix.name }}.zip

  merge-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: playwright_automation

      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: downloaded-reports
          pattern: 'report-*.zip'
          merge-multiple: true

      - name: Prepare reports for merging
        run: |
          # Create directory for extracted reports
          mkdir -p extracted-reports
          
          # Unzip all artifacts
          find downloaded-reports -name '*.zip' -exec unzip -d extracted-reports {} \;
          
          # Create merge directory structure
          mkdir -p playwright_automation/merge-input
          i=1
          for report in $(find extracted-reports -name 'report.json'); do
            dir="playwright_automation/merge-input/run-$i"
            mkdir -p "$dir"
            cp "$report" "$dir/test-results.json"
            i=$((i+1))
          done

          # Debug merge input
          echo "Merge input structure:"
          tree playwright_automation/merge-input || true
          echo "Test results files:"
          find playwright_automation/merge-input -name 'test-results.json' -exec echo "Found: {}" \;

      - name: Merge reports
        working-directory: playwright_automation
        run: |
          npx playwright merge-reports --reporter html merge-input
          mkdir -p ../merged-report
          mv playwright-report ../merged-report/

      - name: Upload merged HTML report
        uses: actions/upload-artifact@v4
        with:
          name: merged-html-report
          path: merged-report