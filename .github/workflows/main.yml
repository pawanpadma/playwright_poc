name: Playwright Test Automation

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Playwright Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - testFile: playwright_automation/tests/example.spec.ts
            name: Test1
          - testFile: playwright_automation/tests/home.spec.ts
            name: Test2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install ./playwright_automation

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run tests with explicit report paths
        continue-on-error: true
        run: |
          set +e
          mkdir -p test-results
          xvfb-run npx playwright test ${{ matrix.testFile }} \
            --reporter=json,html \
            --output=test-results/${{ matrix.name }} \
            --reporter-json-output=test-results/${{ matrix.name }}/report.json \
            --reporter-html-output=test-results/${{ matrix.name }}/html-report
          STATUS=$?
          echo "$([ "$STATUS" -eq 0 ] && echo 'passed' || echo 'failed')" > test-results/${{ matrix.name }}/status.txt
          exit $STATUS
        working-directory: playwright_automation

      - name: Verify test outputs
        run: |
          echo "Test outputs for ${{ matrix.name }}:"
          ls -la test-results/${{ matrix.name }}
          echo "Report.json content (first 5 lines):"
          head -n 5 test-results/${{ matrix.name }}/report.json || echo "No report.json found"
        working-directory: playwright_automation

      - name: Package test results
        run: |
          zip -r report-${{ matrix.name }}.zip test-results/${{ matrix.name }}
        working-directory: playwright_automation

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.name }}
          path: playwright_automation/report-${{ matrix.name }}.zip

  merge-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install jq for JSON processing
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install dependencies
        run: npm install
        working-directory: playwright_automation

      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts

      - name: Debug artifact structure
        run: |
          echo "Artifact directory structure:"
          find downloaded-artifacts -type f -exec echo "Found: {}" \;
          echo "Zip files:"
          find downloaded-artifacts -name '*.zip' -exec echo "{}" \;

      - name: Extract and prepare reports
        run: |
          # Create directories
          mkdir -p extracted-reports
          mkdir -p playwright_automation/merge-input
          
          # Unzip all artifacts
          find downloaded-artifacts -name '*.zip' -exec unzip -d extracted-reports {} \;
          
          # Debug extracted files
          echo "Extracted files:"
          find extracted-reports -type f -name 'report.json' -exec echo "Found report: {}" \;
          
          # Process each report
          i=1
          for report in $(find extracted-reports -type f -path '*/test-results/*/report.json'); do
            echo "Processing valid report: $report"
            dir="playwright_automation/merge-input/run-$i"
            mkdir -p "$dir"
            cp "$report" "$dir/test-results.json"
            i=$((i+1))
          done
          
          # Verify we have reports to merge
          echo "Final reports to merge:"
          find playwright_automation/merge-input -name 'test-results.json' -exec echo "Mergeable: {}" \;
          
          if [ $(find playwright_automation/merge-input -name 'test-results.json' | wc -l) -eq 0 ]; then
            echo "ERROR: No valid test results found in extracted-reports"
            find extracted-reports -type f -exec echo "Existing file: {}" \;
            exit 1
          fi

      - name: Merge reports
        working-directory: playwright_automation
        run: |
          echo "Merging these reports:"
          find merge-input -name 'test-results.json' -exec echo "  {}" \;
          
          npx playwright merge-reports --reporter html merge-input
          
          mkdir -p ../merged-report
          mv playwright-report ../merged-report/

      - name: Upload merged HTML report
        uses: actions/upload-artifact@v4
        with:
          name: merged-html-report
          path: merged-report