name: Playwright Tests by File

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Playwright Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - testFile: playwright_automation/tests/example.spec.ts
          name: Test1
        - testFile: playwright_automation/tests/home.spec.ts
          name: Test2
        # - testFile: playwright_automation/tests/login.spec.ts
        #   name: Test3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install ./playwright_automation

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Debug test file path
        run: |
          echo "Running file: ${{ matrix.testFile }}"  

      - name: Run tests and set status
        run: |
            xvfb-run npx playwright test ${{ matrix.testFile }} --reporter=html
            EXIT_CODE=$?
            if [ $EXIT_CODE -ne 0 ]; then
              echo "failed" > status.txt
            else
              echo "passed" > status.txt
            fi
        working-directory: playwright_automation
        continue-on-error: true

      - name: Rename and zip HTML report
        run: |
          # REPORT_DIR="report-${{ matrix.name }}"
          # mv playwright_automation/playwright-report "$REPORT_DIR"
          # zip -r "$REPORT_DIR.zip" "$REPORT_DIR" 

          EPORT_DIR="report-${{ matrix.name }}"
          mv playwright_automation/playwright-report "$REPORT_DIR"
          mv playwright_automation/status.txt "$REPORT_DIR/status.txt"
          zip -r "$REPORT_DIR.zip" "$REPORT_DIR"

      - name: Upload zipped report
        uses: actions/upload-artifact@v4
        with:
            name: report-${{ matrix.name }}
            path: report-${{ matrix.name }}.zip

  

  merge-reports:
      runs-on: ubuntu-latest
      needs: test
      steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Debug checkout content
        run: |
            echo "Current working directory: $PWD"
            echo "Files:"
            ls -la
      
      - name: Install dependencies
        run: npm install
        working-directory: playwright_automation
          
      - name: Install Playwright CLI (if needed)
        run: npm install --no-save playwright
        working-directory: playwright_automation

      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: all-reports
          merge-multiple: true
      
      - name: List downloaded reports
        run: find all-reports
      
      # - name: Generate report index
      #   run: |
      #     mkdir merged-report
      #     echo "<html><body><h1>Test Report Index</h1><ul>" > merged-report/index.html
      #     for zip in all-reports/*.zip; do
      #       name=$(basename "$zip" .zip)
      #       mkdir -p "merged-report/$name"
      #       unzip -q "$zip" -d "merged-report/tmp"
      #       mv "merged-report/tmp/$name"/* "merged-report/$name"
      #       rm -rf "merged-report/tmp"
      #       echo "<li><a href='$name/index.html'>$name</a></li>" >> merged-report/index.html
      #     done
      #     echo "</ul></body></html>" >> merged-report/index.html

      - name: Generate merged HTML report index with status
        run: |
            echo "<html><body><h1>Test Report Index</h1><ul>" > merged-report/index.html

            for zip in all-reports/*.zip; do
            name=$(basename "$zip" .zip)

            mkdir -p "merged-report/$name"
            unzip -q "$zip" -d "merged-report/$name"

            status="❓"

     
            if [[ -f "merged-report/$name/status.txt" ]]; then
              if grep -qi "passed" "merged-report/$name/status.txt"; then
                status="✅"
              elif grep -qi "failed" "merged-report/$name/status.txt"; then
                status="❌"
              fi
            fi

            echo "<li><a href='$name/index.html'>$name $status</a></li>" >> merged-report/index.html
            done

            echo "</ul></body></html>" >> merged-report/index.html
      
      - name: Upload merged index report
        uses: actions/upload-artifact@v4
        with:
          name: merged-html-report
          path: merged-report
      

